<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Tbl_user extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Tbl_user_model');
    } 

    /*
     * Listing of tbl_user
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('tbl_user/index?');
        $config['total_rows'] = $this->Tbl_user_model->get_all_tbl_user_count();
        $this->pagination->initialize($config);

        $data['tbl_user'] = $this->Tbl_user_model->get_all_tbl_user($params);
        
        $data['_view'] = 'tbl_user/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new tbl_user
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('username','Username','required');
		$this->form_validation->set_rules('pass','Pass','required');
		$this->form_validation->set_rules('role','Role','required');
		$this->form_validation->set_rules('created_at','Created At','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'role' => $this->input->post('role'),
				'username' => $this->input->post('username'),
				'pass' => $this->input->post('pass'),
				'created_at' => $this->input->post('created_at'),
				'update_at' => $this->input->post('update_at'),
            );
            
            $tbl_user_id = $this->Tbl_user_model->add_tbl_user($params);
            redirect('tbl_user/index');
        }
        else
        {            
            $data['_view'] = 'tbl_user/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a tbl_user
     */
    function edit($id_user)
    {   
        // check if the tbl_user exists before trying to edit it
        $data['tbl_user'] = $this->Tbl_user_model->get_tbl_user($id_user);
        
        if(isset($data['tbl_user']['id_user']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('username','Username','required');
			$this->form_validation->set_rules('pass','Pass','required');
			$this->form_validation->set_rules('role','Role','required');
			$this->form_validation->set_rules('created_at','Created At','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'role' => $this->input->post('role'),
					'username' => $this->input->post('username'),
					'pass' => $this->input->post('pass'),
					'created_at' => $this->input->post('created_at'),
					'update_at' => $this->input->post('update_at'),
                );

                $this->Tbl_user_model->update_tbl_user($id_user,$params);            
                redirect('tbl_user/index');
            }
            else
            {
                $data['_view'] = 'tbl_user/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The tbl_user you are trying to edit does not exist.');
    } 

    /*
     * Deleting tbl_user
     */
    function remove($id_user)
    {
        $tbl_user = $this->Tbl_user_model->get_tbl_user($id_user);

        // check if the tbl_user exists before trying to delete it
        if(isset($tbl_user['id_user']))
        {
            $this->Tbl_user_model->delete_tbl_user($id_user);
            redirect('tbl_user/index');
        }
        else
            show_error('The tbl_user you are trying to delete does not exist.');
    }
    
}
